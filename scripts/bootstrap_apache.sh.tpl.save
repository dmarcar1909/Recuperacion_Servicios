#!/bin/bash
apt update
apt install -y docker.io
systemctl enable docker
systemctl start docker

# Crear directorio de trabajo
mkdir -p /home/ubuntu/apache-ldap/html
mkdir -p /home/ubuntu/apache-ldap/htaccess
cd /home/ubuntu/apache-ldap

# Cambiar directorio raiz
mkdir -p /home/ubuntu/apache-ldap/misitio
cat <<EOF > misitio/index.html
<h1>Página raíz personalizada</h1>
EOF


# HTML protegido
cat <<EOF > html/privado.html
<h1>Contenido protegido</h1>
<p>Solo accesible con usuario LDAP</p>
EOF

# Archivo .htaccess
cat <<EOF > htaccess/.htaccess
AuthType Basic
AuthName "Zona protegida"
AuthBasicProvider ldap
AuthLDAPURL ldap://${ldap_ip}:389/ou=usuarios,dc=damian,dc=com?uid
AuthLDAPBindDN "cn=admin,dc=damian,dc=com"
AuthLDAPBindPassword admin
Require valid-user
EOF

# Archivo de configuración adicional
cat <<EOF > apache-ldap.conf
<Directory "/usr/local/apache2/misitio">
    Options Indexes FollowSymLinks
    AllowOverride All
    Require all granted
</Directory>

DocumentRoot "/usr/local/apache2/misitio"
...
EOF

# Asegurarse de que los módulos se cargan solo una vez
<IfModule !ldap_module>
    LoadModule ldap_module modules/mod_ldap.so
</IfModule>
<IfModule !authnz_ldap_module>
    LoadModule authnz_ldap_module modules/mod_authnz_ldap.so
</IfModule>
<IfModule !auth_basic_module>
    LoadModule auth_basic_module modules/mod_auth_basic.so
</IfModule>
<IfModule !authz_core_module>
    LoadModule authz_core_module modules/mod_authz_core.so
</IfModule>
EOF

# Dockerfile
cat <<EOF > Dockerfile
FROM httpd:2.4
EXPOSE 8080

# Copiar archivos
COPY html/privado.html /usr/local/apache2/htdocs/
COPY htaccess/.htaccess /usr/local/apache2/htdocs/
COPY apache-ldap.conf /usr/local/apache2/conf/extra/

# Incluir el nuevo archivo de configuración
RUN echo "IncludeOptional conf/extra/apache-ldap.conf" >> /usr/local/apache2/conf/httpd.conf

# Cambiar puerto interno de Apache
RUN sed -i 's/Listen 80/Listen 8080/' /usr/local/apache2/conf/httpd.conf

# Instalar herramientas LDAP para pruebas si se desean (opcional)
RUN apt update && apt install -y ldap-utils
EOF

# Construir y lanzar contenedor
docker build -t apache-ldap .
docker run -d -p 8080:8080 --name apache-ldap apache-ldap
